# These functions are
# Copyright (C) 1998-2021 T.W. Yee, University of Auckland.
# All rights reserved.





useDynLib(VGAM, .registration = TRUE)




  export(spikeplot)
  export(trim.constraints)
 export(meangait)
 importFrom("graphics", "title")
 export(Trunc)
 export(dgaitplot)
 export(plotdgait, plotdgait.vglm)
 export(round2)
 export(gaitpoisson)
 export(gaitlog)
 export(gaitzeta)
exportMethods(is.altered, is.inflated, is.truncated)
export(dgaitbinom, pgaitbinom, qgaitbinom, rgaitbinom)
export(dgaitnbinom, pgaitnbinom, qgaitnbinom, rgaitnbinom)
export(gait.errorcheck)
export(genpoisson1, genpoisson2)
export(dgenpois0, pgenpois0, qgenpois0, rgenpois0)
export(dgenpois1, pgenpois1, qgenpois1, rgenpois1)
export(dgenpois2, pgenpois2, qgenpois2, rgenpois2)
exportMethods(Influence)
export(Influence.vglm)
export(hdeff.numeric, hdeff.matrix)
  export(moments.gaitcombo)
  export(moments.gaitcombo.pois)
  export(moments.gaitcombo.log)
  export(moments.gaitcombo.zeta)
  export(eCDF)
exportMethods(eCDF)
  export(dextlogF, extlogF1, extlogF1.control)
  export(is.crossing, fix.crossing)
exportMethods(is.crossing, fix.crossing)
  export(dgaitzeta, pgaitzeta, qgaitzeta, rgaitzeta)  # gaitzeta.mix
  export(dgaitpois, pgaitpois, qgaitpois, rgaitpois)  # gaitpoisson.mix
  export(dgaitlog , pgaitlog , qgaitlog , rgaitlog)  # gaitlog.mix
exportMethods(specials, altered, inflated, truncated)
export(specialsvglm)
export(get.offset)
export(get.offset.vglm)
exportMethods(get.offset)
export(y.gaitcombo.check)





export(is.Numeric2)
export(dzipfmb, pzipfmb, qzipfmb, rzipfmb)




exportMethods(rootogram4)
export(rootogram4vglm)


importFrom("stats", "xtabs", "na.omit")
importFrom("grDevices", "n2mfrow")


export(
  "rootogram0",
  "rootogram0.default")
importFrom("graphics", "abline", "axis", "box", "hist", "lines",
                       "par", "plot", "points", "polygon", "rect")
S3method("rootogram0", "default")
S3method("plot", "rootogram0")





export(add1.vglm)
export(drop1.vglm)
export(fitmodel.VGAM.expression)
export(assign2assign, findterms, subsetassign)
importFrom("stats", "add1", "drop1", "factor.scope", "update.default")
exportMethods(step4)
export(step4vglm)
importFrom("stats", "add.scope", "drop.scope", "extractAIC")
S3method(add1, vglm, add1.vglm)
S3method(drop1, vglm, drop1.vglm)
S3method(extractAIC, vglm, extractAIC.vglm)
export(extractAIC.vglm)
exportMethods(dfterms)
export(dftermsvglm)
export(wz.merge)
export(getarg)
export(rainbow.sky)
export(loglink, logneglink, logofflink, negidentitylink, logitlink)
export(logloglink, clogloglink, reciprocallink, negloglink, probitlink)
export(negreciprocallink, rhobitlink, fisherzlink, multilogitlink)
export(foldsqrtlink, extlogitlink, logclink, cauchitlink)
export(gordlink, pordlink, nbordlink, nbord2link)
export(zeta.specials)
export(stieltjes)
export(loglogloglink)
importFrom("graphics", "legend")
export(hdeffsev, seglines)
export(bell)
exportMethods(calibrate)
export(fnumat2R)
export(dtrinorm, rtrinorm, trinormal)
export(car.relatives)
export(attr.assign.x.vglm)
importFrom("stats", "stat.anova")
export(ordsup, ordsup.vglm)
export(R2latvar)
importFrom("stats", anova)
export(dtrinorm, rtrinorm)
export(mux5)
export( wald.stat,  wald.stat.vlm)
export(score.stat, score.stat.vlm)
export(  lrt.stat,   lrt.stat.vlm)
export(mills.ratio, mills.ratio2)
export(which.etas)
export(which.xij)
exportMethods(TIC)
export(TIC)
export(TICvlm)
export(retain.col, d3theta.deta3)
export(ghn100, ghw100)
export(hdeff, hdeff.vglm)
export(calibrate.rrvglm.control, calibrate.rrvglm)


importFrom("utils", "tail")
importFrom("stats", ".nknots.smspl")
export(sm.os)
export(label.cols.y)
export(negbinomial.initialize.yj)
export(mroot2)
export(psint)
export(psintpvgam)
export(startstoppvgam)
export(summarypvgam, show.summary.pvgam)
S3method(df.residual, pvgam, df.residual_pvgam)
export(df.residual_pvgam)
exportMethods(endf)
export(endfpvgam)
export(vcov.pvgam)
S3method(vcov, pvgam, vcovpvgam)
export(show.pvgam)
importFrom("graphics", "polygon")
export(model.matrixpvgam)
S3method(model.matrix, pvgam, model.matrixpvgam)
importFrom("stats", "ppoints")
export(ddiffzeta, pdiffzeta, qdiffzeta, rdiffzeta, diffzeta)



export(gharmonic, gharmonic2)
export(pzeta, qzeta, rzeta)
export(qzipf)
export(bisection.basic)
export(Zeta.aux)
export(topple, dtopple, ptopple, qtopple, rtopple)

export(zoabetaR)




export(sm.ps, get.X.VLM.aug, psv2magic)

export(checkwz)
export(process.constraints)
export(mux22, mux111)
importFrom("splines", "splineDesign")







export(AR1EIM)
export(AR1.gammas)
importFrom("stats", "cov")


export(as.char.expression)


export(predictvglmS4VGAM)
  export(EIM.posNB.speciald, EIM.posNB.specialp)

export(.min.criterion.VGAM)
export(pzoibetabinom, pzoibetabinom.ab,
       rzoibetabinom, rzoibetabinom.ab,
       dzoibetabinom, dzoibetabinom.ab,
       Init.mu)


export(log1mexp)
export(dzoabeta, pzoabeta, qzoabeta, rzoabeta)
export(logitoffsetlink)
export(showvglmS4VGAM)
export(showvgamS4VGAM)



export(subsetarray3)
export(tapplymat1)
export(findFirstMethod)
export(summaryvglmS4VGAM)
export(showsummaryvglmS4VGAM)


S3method(vcov, vlm, vcovvlm)
S3method(coef, vlm, coefvlm)
S3method(df.residual, vlm, df.residual_vlm)
S3method(model.matrix, vlm, model.matrixvlm)
S3method(formula, vlm, formulavlm)
export(vcov.vlm, coef.vlm, formula.vlm, model.matrix.vlm)
export(has.interceptvlm)
exportMethods(has.intercept)
export(term.namesvlm)
exportMethods(term.names)
export(responseNamevlm)
exportMethods(responseName)




  importFrom("grDevices", "chull")
  importFrom("graphics", "abline", "arrows", "axis", "lines", "matlines",
             "matplot", "matpoints", "mtext", "par", "points", "rug",
             "segments", "text")
  importFrom("methods", "as", "is", "new", "slot", "slot<-", "slotNames",
             "callNextMethod", "existsMethod", "signature",
             "show")
  importFrom("stats", ".getXlevels", "as.formula", "contrasts<-",
             "dbeta", "dbinom", "delete.response", "deriv3", "dgamma",
             "dgeom", "dnbinom", "dt", "dweibull", "getCall",
             "integrate", "is.empty.model", "lm.fit", "median",
             "model.offset", "model.response", "model.weights",
             "na.fail", "napredict", "optim", "pbeta", "pbinom",
             "pgamma", "pgeom", "pnbinom", "polym", "printCoefmat",
             "plogis", "qlogis",
             "pweibull", "qbeta", "qbinom", "qchisq", "qf", "qgamma",
             "qgeom", "qnbinom", "qt", "quantile", "qweibull", "rbeta",
             "rbinom", "rgamma", "rgeom", "rlnorm", "rlogis", "rnbinom",
             "runif", "rweibull", "sd", "spline", "terms.formula",
             "time", "uniroot", "update.formula", "var", "weighted.mean")
  importFrom("utils", "flush.console", "getS3method", "head")



importFrom("stats4", profile)  # For S4, not S3
export(profilevglm)  # For S4, not S3
importFrom("stats", "approx")
export(vplot.profile)
export(vpairs.profile)
importFrom("grDevices", "dev.flush", "dev.hold")
importFrom("graphics", "frame")



importFrom("stats4", confint)  # For S4, not S3
export(confintvglm)  # For S4, not S3
export(confintrrvglm)  # For S4, not S3
export(confintvgam)  # For S4, not S3
exportMethods(confint)  # For S4, not S3


export(AR1)
export(dAR1)
export(param.names)
export(is.buggy.vlm)
exportMethods(is.buggy)



importFrom("splines", splineDesign, bs, ns)


export(nparam, nparam.vlm, nparam.vgam, nparam.rrvglm, nparam.qrrvglm, nparam.rrvgam)
export(linkfun, linkfun.vglm)
export(sm.bs, sm.ns, sm.scale.default, sm.poly, sm.scale)
exportMethods(coefficients, coef)
importFrom("stats", coefficients, coef)
export(case.names,
       coef,
       coefficients,
       df.residual,
       fitted,
       fitted.values,
       formula,
       residuals,
       variable.names,
       weights)


export(expected.betabin.ab, grid.search, grid.search2, grid.search3, grid.search4)

exportMethods(QR.Q, QR.R)
export(QR.Q, QR.R)
export(Select, subsetcol)


export(simulate.vlm)
importFrom("stats", simulate)




export(familyname.vlm)
export(familyname.vglmff)
exportMethods(familyname)
export(logLik.qrrvglm)






importFrom("stats4", BIC)
exportMethods(BIC)
export(BICvlm)
export(check.omit.constant)
export(I.col)



export(dbiclaytoncop, rbiclaytoncop, biclaytoncop)


export(bistudentt, dbistudentt)
export(dbinormcop, pbinormcop, rbinormcop, binormalcop)
export(kendall.tau)

export(expint, expexpint, expint.E1)


export(pgamma.deriv, pgamma.deriv.unscaled, truncweibull)

export(binom2.rho.ss)


export(arwz2wz)


export(link2list)
export(multilogit)


export(perks, dperks, pperks, qperks, rperks)
export(gumbelII, dgumbelII, pgumbelII, qgumbelII, rgumbelII)
export(makeham, dmakeham, pmakeham, qmakeham, rmakeham)
export(gompertz, dgompertz, pgompertz, qgompertz, rgompertz)
export(lindley, dlind, plind, rlind)


export(w.wz.merge, w.y.check, vweighted.mean.default)
export(is.parallel.matrix, is.parallel.vglm,
       is.zero.matrix, is.zero.vglm)
exportMethods(is.parallel, is.zero)


export(nvar_vlm)

importFrom("stats4", nobs)
exportMethods(nobs)






importFrom("stats4", AIC, coef, summary, plot, logLik, vcov)
exportMethods(AIC, AICc, coef, summary, plot, logLik, vcov)


export(npred, npred.vlm)
exportMethods(npred)
export(hatvalues, hatvaluesvlm)
exportMethods(hatvalues)
importFrom("stats", hatvalues)


importFrom("stats", dfbeta)  # Added 20140509
export(dfbeta, dfbetavlm)
exportMethods(dfbeta)


export(hatplot, hatplot.vlm)
exportMethods(hatplot)


export(VGAMenv)


export(lrtest, lrtest_vglm)
export(update_default, update_formula)


export(nvar, nvar.vlm, nvar.vgam, nvar.rrvglm, nvar.qrrvglm, nvar.rrvgam, nvar.rcim)
export(      nobs.vlm)


export(plota21)



export(Confint.rrnb, Confint.nb1)
export(vcovrrvglm)


export(posbernoulli.b, posbernoulli.t, posbernoulli.tb,
       aux.posbernoulli.t)
export(N.hat.posbernoulli)
export(dposbern, rposbern)



export(is.empty.list)






export(
Build.terms.vlm,
interleave.VGAM, interleave.cmat,
procVec,
eijfun,
ResSS.vgam,
valt.control,
trivial.constraints,
vcontrol.expression,
vplot, vplot.default, vplot.factor, vplot.list,
vplot.matrix, vplot.numeric, vvplot.factor)


export(
m2a,a2m,vforsub,
vbacksub,
vchol)



export(
case.namesvlm,
variable.namesvlm
)



export(expgeometric, dexpgeom, pexpgeom, qexpgeom, rexpgeom,
genrayleigh, dgenray, pgenray, qgenray, rgenray,
exppoisson, dexppois, pexppois, qexppois, rexppois,
explogff, dexplog, pexplog, qexplog, rexplog)




export(Rcim, plotrcim0,
rcim, summaryrcim)
export(moffset)
export(plotqvar, qvplot, Qvar, qvar)
export(depvar, depvar.vlm)





export(put.caption)





export(
cm.VGAM, cm.nointercept.VGAM, cm.zero.VGAM,
Deviance.categorical.data.vgam,
lm2qrrvlm.model.matrix,
vlabel,
dimm)



export(is.smart, smart.mode.is, wrapup.smart, setup.smart,
sm.min1, sm.min2)
export(
smart.expression,
get.smart, get.smart.prediction,
put.smart)



export(dbinorm, pbinorm, rbinorm, binormal)


export(pnorm2, dnorm2)







export(iam,
fill, fill1, fill2, fill3,
biamhcop, dbiamhcop, pbiamhcop, rbiamhcop,
bigamma.mckay,
freund61,
frechet, dfrechet, pfrechet, qfrechet, rfrechet,
bifrankcop, dbifrankcop, pbifrankcop, rbifrankcop,
biplackettcop, dbiplackcop, pbiplackcop, rbiplackcop,
benini1, dbenini, pbenini, qbenini, rbenini,
maxwell, dmaxwell, pmaxwell, qmaxwell, rmaxwell,
bifgmexp,
bifgmcop, dbifgmcop, pbifgmcop, rbifgmcop,
bigumbelIexp,
erf, erfc, lerch, lambertW, log1pexp,
truncpareto, dtruncpareto, qtruncpareto, rtruncpareto, ptruncpareto,
paretoff, dpareto, qpareto, rpareto, ppareto,
paretoIV, dparetoIV, qparetoIV, rparetoIV, pparetoIV,
paretoIII, dparetoIII, qparetoIII, rparetoIII, pparetoIII,
paretoII, dparetoII, qparetoII, rparetoII, pparetoII,
dparetoI, qparetoI, rparetoI, pparetoI,
cens.gumbel, gumbelff, gumbel,
dgumbel, pgumbel, qgumbel, rgumbel,
foldnormal, dfoldnorm, pfoldnorm, qfoldnorm, rfoldnorm,
cennormal,
cens.normal, double.cens.normal,
rec.normal, rec.normal.control,
rec.exp1,   rec.exp1.control,
cens.rayleigh, rayleigh, drayleigh, prayleigh, qrayleigh, rrayleigh,
drice, price, qrice, rrice, riceff, marcumQ,
dskellam, rskellam, skellam,
inv.gaussianff, dinv.gaussian, pinv.gaussian, rinv.gaussian, waldff,
expexpff1, expexpff)




export(
AICvlm, AICvgam, AICrrvglm, AICqrrvglm, # AICvglm,
anova.vgam,
anova.vglm,
bisa, dbisa, pbisa, qbisa, rbisa,
betabinomialff, betabinomial,
double.expbinomial,
dbetabinom,    pbetabinom,    rbetabinom,
dbetabinom.ab, pbetabinom.ab, rbetabinom.ab,
biplot.qrrvglm,
dbort, rbort, borel.tanner,
care.exp, care.exp2,
cauchy, cauchy1,
concoef.rrvgam, concoef.Coef.rrvgam, concoef.Coef.qrrvglm, concoef.qrrvglm,
cdf, cdf.lms.bcg, cdf.lms.bcn,
cdf.lms.yjn, cdf.vglm,
Coef.rrvgam, Coefficients,
coefqrrvglm,
coefvlm, coefvgam,
coefvsmooth.spline, coefvsmooth.spline.fit,
constraints, constraints.vlm,
deplot, deplot.default, deplot.lms.bcg, deplot.lms.bcn,
deplot.lms.yjn, deplot.lms.yjn2, deplot.vglm,
deviance.vlm, deviance.qrrvglm,
df.residual_vlm,
dirmultinomial, dirmul.old,
dtheta.deta, d2theta.deta2)



S3method(anova, vgam)
S3method(anova, vglm)
S3method(as.character, SurvS4)
S3method(biplot, qrrvglm)
S3method(biplot,  rrvglm)
S3method(deviance, qrrvglm)
S3method(deviance, vlm)
S3method(logLik, qrrvglm)
S3method(logLik, vlm)
S3method(model.matrix, qrrvglm, model.matrixqrrvglm)
S3method(nobs, vlm)
S3method(persp, rrvgam)
S3method(plot, rrvgam)
S3method(plot, vgam)
S3method(predict, rrvgam)
S3method(predict, rrvglm)
S3method(predict, vgam)
S3method(predict, vlm)
S3method(simulate, vlm)
S3method(sm.scale, default)
S3method(summary, grc)
S3method(summary, qrrvglm)
S3method(summary, rrvgam)
S3method(summary, rrvglm)
S3method(terms, vlm)



export(cloglog,cauchit,extlogit,explink,fisherz,logc,loge,logneg,logit,
       logoff,negreciprocal,
       probit,reciprocal,rhobit,
       golf,polf,nbolf,nbolf2,Cut)
export(ordpoisson)
export(poisson.points, dpois.points)




export(
erlang,
dfelix, felix,
fittedvlm, fittedvsmooth.spline, foldsqrt,
formulavlm, formulaNA.VGAM,
garma,
gaussianff,
hypersecant, hypersecant01,
hyperg,
inv.binomial, InverseBrat, inverse.gaussianff,
is.Numeric,
mccullagh89, leipnik,
dlevy, plevy, qlevy, rlevy, levy,
lms.bcg.control, lms.bcn.control, lmscreg.control,
lms.yjn.control,
lms.bcg, lms.bcn, lms.yjn, lms.yjn2,
dlms.bcn, qlms.bcn,
lqnorm,
dbilogis, pbilogis, rbilogis, bilogistic,
logistic1, logistic,
logLik.vlm,
latvar.rrvgam, latvar.Coef.qrrvglm, latvar.rrvglm, latvar.qrrvglm,
lvplot.rrvgam,
Rank, Rank.rrvglm, Rank.qrrvglm, Rank.rrvgam,
Max.Coef.qrrvglm, Max.qrrvglm,
is.bell.vlm, is.bell.rrvglm, is.bell.qrrvglm, is.bell.rrvgam, is.bell,
model.matrixqrrvglm,
model.matrixvlm,
model.framevlm,
nakagami, dnaka, pnaka, qnaka, rnaka,
namesof,
nlminbcontrol, negloge,
Opt.Coef.qrrvglm, Opt.qrrvglm, persp.rrvgam)


export( micmen )


export( plot.rrvgam,
plotpreplotvgam,
plotvglm, plotvlm,
plotvsmooth.spline, powerlink,
predict.rrvgam, predictrrvgam,
predictors, predictors.vglm,
predictqrrvglm, predict.rrvglm,
predict.vgam,
predictvglm, predict.vlm, predictvsmooth.spline,
predictvsmooth.spline.fit,
  show.Coef.rrvgam,
  show.Coef.qrrvglm, show.Coef.rrvglm, show.rrvglm,
  show.summary.rrvgam, show.summary.qrrvglm,
  show.summary.rrvglm,
  show.summary.vgam,
  show.summary.vglm,
  show.summary.vlm,
  show.vanova,
show.vgam, show.vglm, show.vlm,
 show.vglmff,
show.vsmooth.spline,
process.binomial2.data.VGAM, process.categorical.data.VGAM,
negzero.expression.VGAM,
qtplot,
qtplot.default, qtplot.gumbel, qtplot.gumbelff, qtplot.lms.bcg,
qtplot.lms.bcn, qtplot.lms.yjn, qtplot.lms.yjn2, qtplot.vextremes, qtplot.vglm,
explot.lms.bcn,
rlplot,
rlplot.gevff, rlplot.gev,
rlplot.vextremes, rlplot.vglm,
rlplot, rlplot.vglm, rrar.control)


export(
SurvS4, is.SurvS4, as.character.SurvS4,
show.SurvS4,
simple.exponential, better.exponential,
simple.poisson,
seq2binomial, size.binomial,
sm.scale1, sm.scale2,
summary.rrvgam, summary.grc,
  summary.qrrvglm,
summary.rrvglm,
summaryvgam, summaryvglm, summaryvlm,
s.vam,
terms.vlm,
termsvlm,
Tol.Coef.qrrvglm, Tol.qrrvglm,
triangle, dtriangle, ptriangle, qtriangle, rtriangle,
valid.vknotl2,
  vcovvlm,
vglm.fit, vgam.fit,
vglm.garma.control, vglm.multinomial.control,
vglm.multinomial.deviance.control, vglm.VGAMcategorical.control,
vlm, vlm.control,
vnonlinear.control,
wweights, yeo.johnson,
dzipf, pzipf, rzipf, zipf,
zeta, zetaff,
dzeta)



export(lm2vlm.model.matrix)
export(vlm2lm.model.matrix)







 importFrom("stats", model.matrix)
 importFrom("stats", model.frame)
 importFrom("stats", terms)







  importFrom("stats", resid)
  importFrom("stats", residuals)
  importFrom("stats", fitted)
  importFrom("stats", predict)
  importFrom("stats", df.residual)


  importFrom("stats", deviance)
  importFrom("stats", fitted.values)
  importFrom("stats", effects)
  importFrom("stats", weights)


  importFrom("stats", formula)
  importFrom("stats", case.names)
  importFrom("stats", variable.names)


  importFrom("stats", dchisq, pchisq,
             pf,
             dexp, rexp,
             dpois, ppois, qpois, rpois,
             dnorm, pnorm, qnorm, rnorm)


  importFrom("graphics", persp)










export(ddagum, rdagum, qdagum, pdagum, dagum)
export(dfisk, pfisk, qfisk, rfisk, fisk)
export(dlomax, plomax, qlomax, rlomax, lomax)
export(dinv.lomax, pinv.lomax, qinv.lomax, rinv.lomax, inv.lomax)
export(dparalogistic, pparalogistic, qparalogistic, rparalogistic,
       paralogistic)
export(dinv.paralogistic, pinv.paralogistic, qinv.paralogistic, rinv.paralogistic,
       inv.paralogistic)
export(dsinmad, psinmad, qsinmad, rsinmad, sinmad)
export(lognormal)
export(dpolono, ppolono, rpolono)
export(dgpd, pgpd, qgpd, rgpd, gpd)
export(dgev, pgev, qgev, rgev, gev, gevff)
export(dlaplace, plaplace, qlaplace, rlaplace, laplace)
export(dalap, palap, qalap, ralap,
       alaplace1.control, alaplace2.control, alaplace3.control,
       alaplace1, alaplace2, alaplace3)
export(dloglap, ploglap, qloglap, rloglap)
export(loglaplace1.control, loglaplace1)
export(dlogitlap, plogitlap, qlogitlap, rlogitlap,
       logitlaplace1.control, logitlaplace1)
export(dprobitlap, pprobitlap, qprobitlap, rprobitlap)
export(dclogloglap, pclogloglap, qclogloglap, rclogloglap)
export(dcard, pcard, qcard, rcard, cardioid)
export(fff, fff.control,
       mbesselI0,
       vonmises)




export(
AA.Aa.aa, AB.Ab.aB.ab, ABO, acat,
betaR, betaff,
dbetageom, pbetageom, rbetageom, betageometric,
dbetanorm, pbetanorm, qbetanorm, rbetanorm, # betanorm,
betaprime,
betaII,
zipebcom,
binom2.or,  dbinom2.or,  rbinom2.or,
binom2.rho, dbinom2.rho, rbinom2.rho, binom2.Rho,
binomialff, biplot.rrvglm, brat,
bratt, Brat, calibrate.qrrvglm.control, calibrate.qrrvglm,
cao.control,
cao,
cdf.lmscreg, cgo, chisq, clo,
concoef,
Coef, Coef.qrrvglm, Coef.rrvglm, Coef.vlm,
predictqrrvglm,
cratio, cumulative, propodds, prplot, prplot.control)
export(
deplot.lmscreg, dirichlet,
exponential, A1A2A3)

export(
lgamma1, lgamma3)
export(
gammahyperbola,
gengamma.stacy, gamma1, gamma2, gammaR, gammaff)
export(dlgamma, plgamma, qlgamma, rlgamma)
export(dgengamma.stacy, pgengamma.stacy, qgengamma.stacy, rgengamma.stacy)


export(
dbenf, pbenf, qbenf, rbenf,
genbetaII.Loglikfun4, genbetaII, dgenbetaII,
genpoisson0,
geometric, truncgeometric,
dlino, plino, qlino, rlino, lino,
grc,
dhzeta, phzeta, qhzeta, rhzeta, hzeta,
negidentity, identitylink,
dprentice74, prentice74,
amlnormal, amlbinomial, amlexponential, amlpoisson, Wr1, Wr2,
dkumar, pkumar, qkumar, rkumar, kumar,
dyules, pyules, qyules, ryules, yulesimon,
logff, dlog, plog, qlog, rlog,
logF, dlogF,
loglinb2, loglinb3,
loglog,
lvplot.qrrvglm, lvplot.rrvglm,
Max, MNSs,
dmultinomial, multinomial,
margeffS4VGAM,
cratio.derivs,
margeff)


export(
huber2, huber1, dhuber, edhuber, phuber, qhuber, rhuber)


export(
slash, dslash, pslash, rslash)


export(
deunif, peunif, qeunif, reunif,
denorm, penorm, qenorm, renorm,
sc.studentt2, dsc.t2, psc.t2, qsc.t2, rsc.t2,
deexp, peexp, qeexp, reexp)


export(
meplot, meplot.default, meplot.vlm,
guplot, guplot.default, guplot.vlm,
posNBD.Loglikfun2,
NBD.Loglikfun2,
negbinomial, negbinomial.size, polya, polyaR,
uninormal, SURff, normal.vcm,
nbcanlink,
tobit, dtobit, ptobit, qtobit, rtobit,
Opt,
perspqrrvglm, plotdeplot.lmscreg, plotqrrvglm, plotqtplot.lmscreg,
plotvgam.control, plotvgam,
plot.vgam,
cens.poisson,
poissonff,
posbinomial,
dposgeom, pposgeom, qposgeom, rposgeom, # posgeometric,
posnegbinomial,
dposnorm, pposnorm, qposnorm, rposnorm, posnormal,
pospoisson,
qtplot.lmscreg,
rdiric, rigff,
rrar, rrvglm.control,
rrvglm.optim.control)


export(eta2theta, theta2eta,
rrvglm,
simplex, dsimplex, rsimplex,
sratio, s,
studentt, studentt2, studentt3, Kayfun.studentt,
Tol, trplot.qrrvglm,
trplot,
rcqo,
cqo,
qrrvglm.control,
vgam.control, vgam, vglm.control, vglm,
vsmooth.spline,
weibull.mean, weibullR,
dzabinom, pzabinom, qzabinom, rzabinom, zabinomial, zabinomialff,
dzageom, pzageom, qzageom, rzageom, zageometric, zageometricff,
dzanegbin, pzanegbin, qzanegbin, rzanegbin, zanegbinomial, zanegbinomialff,
dzapois, pzapois, qzapois, rzapois, zapoisson, zapoissonff,
dzibinom, pzibinom, qzibinom, rzibinom, zibinomial, zibinomialff,
dzigeom, pzigeom, qzigeom, rzigeom, zigeometric, zigeometricff,
dzinegbin, pzinegbin, qzinegbin, rzinegbin, zinegbinomial, zinegbinomialff,
dzipois, pzipois, qzipois, rzipois, zipoisson, zipoissonff,
mix2exp, mix2normal, mix2poisson,
mix2exp.control, mix2normal.control, mix2poisson.control,
skewnormal, dskewnorm, rskewnorm)










exportClasses(vglmff, vlm, vglm, vgam,
rrvglm, qrrvglm, grc,  rcim,
vlmsmall, rrvgam,
summary.vgam, summary.vglm, summary.vlm,
summary.qrrvglm,
summary.rrvgam, summary.rrvglm,
Coef.rrvglm, Coef.qrrvglm, Coef.rrvgam,
vcov.qrrvglm,
vsmooth.spline.fit, vsmooth.spline)


exportClasses(SurvS4)








 exportMethods(
Coef, coefficients,
constraints,
effects,
predict, fitted, fitted.values,
resid,
residuals, show,
terms,
model.frame,
model.matrix,
summary,
coef,
AIC,
AICc,
plot,
logLik,
vcov,
deviance,
cdf, df.residual,
lv, latvar, Max, Opt, Tol,
biplot, deplot, lvplot, qtplot, rlplot, meplot,
trplot, vplot,
formula, case.names, variable.names,
weights,
persp)


 exportMethods(AIC, AICc, coef, summary, plot, logLik, vcov)


